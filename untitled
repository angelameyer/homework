puts "Choose a number"

# user_entry = gets

 class LCDNumber

 	def initialize(user_entry)
 		  @user_entry = user_entry
 	end

 	def convert
		 	@numbers = {
		    "1" => ["   ",
		            "  |",
		            "  |"],
		    "2" => [" _ ",
		            " _|",
		            "|_ "],
		    "3" => [" _ ",
		            " _|",
		            " _|"],
		    "4" => ["   ",
		            "|_|",
		            "  |"],
		    "5" => [" _ ",
		            "|_ ",
		            " _|"],
		    "6" => [" _ ",
		            "|_ ",
		            "|_|"],
		    "7" => [" _ ",
		            "  |",
		            "  |"],
		    "8" => [" _ ",
		            "|_|",
		            "|_|"],
		    "9" => [" _ ",
		            "|_|",
		            " _|"],
		    "0" => [" _ ",
		            "| |",
		            "|_|"]
		  }
		  
		# if @user_entry == "1"
		# 	print @numbers["1"].split("\n").first
		# end

		# @user_entry.each_char do |c|
		# 	print @numbers[c][0]
		# end

		array_of_numbers = @numbers.map do |n|
  	puts n

		end
		# # array_of_chocolates now has these values
		# => ['chocolate truffle', 'chocolate kiss', 'chocolate rabbit']


		# @numbers.each do |number, lcd|
			
		# 	print lcd[number.to_i].split("\n").first
			
		# end

		#   ue = @user_entry
		#   @user_entry.each_char do |n|
		# 	print "#{@numbers[ue[0]][0]}" + "#{@numbers[ue[1]][0]}" + "#{@numbers[ue[2]][0]}" + "#{@numbers[ue[3]][0]}" + "#{@numbers[ue[4]][0]} \n" 
		# 	print "#{@numbers[ue[0]][1]}" + "#{@numbers[ue[1]][1]}" + "#{@numbers[ue[2]][1]}" + "#{@numbers[ue[3]][1]}" + "#{@numbers[ue[4]][1]} \n"
		# 	print "#{@numbers[ue[0]][2]}" + "#{@numbers[ue[1]][2]}" + "#{@numbers[ue[2]][2]}" + "#{@numbers[ue[3]][2]}" + "#{@numbers[ue[4]][2]} \n" 

  end
end

number1 = LCDNumber.new("1")
number2 = LCDNumber.new("2")
number3 = LCDNumber.new("3")
number4 = LCDNumber.new("4")
number5 = LCDNumber.new("5")
number6 = LCDNumber.new("6")
number7 = LCDNumber.new("7")
number8 = LCDNumber.new("8")
number9 = LCDNumber.new("9")
number0 = LCDNumber.new("0")
number15 = LCDNumber.new("15")

# number1 = LCDNumber.new(user_entry.strip)
number1.convert
number2.convert
number3.convert
number4.convert
number5.convert
# number6.convert
# number7.convert
# number8.convert
# number9.convert
# number0.convert
